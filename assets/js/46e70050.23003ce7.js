"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6962],{9459:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"sdk-documentation/android-sdk-for-vicollo/quick-start","title":"Quick Start","description":"1. Prerequisites","source":"@site/docs/5-sdk-documentation/2-android-sdk-for-vicollo/1-quick-start.md","sourceDirName":"5-sdk-documentation/2-android-sdk-for-vicollo","slug":"/sdk-documentation/android-sdk-for-vicollo/quick-start","permalink":"/dev-book/sdk-documentation/android-sdk-for-vicollo/quick-start","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Android SDK for Vicollo","permalink":"/dev-book/category/android-sdk-for-vicollo"},"next":{"title":"iOS SDK","permalink":"/dev-book/category/ios-sdk"}}');var s=i(4848),r=i(8453);const d={sidebar_position:1},l="Quick Start",t={},a=[{value:"1. Prerequisites",id:"1-prerequisites",level:2},{value:"2. Installing SDK",id:"2-installing-sdk",level:2},{value:"3. Usage",id:"3-usage",level:2},{value:"4. Reference",id:"4-reference",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,s.jsx)(n.h2,{id:"1-prerequisites",children:"1. Prerequisites"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Requirement"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SDK 24 or higher"}),"\n",(0,s.jsx)(n.li,{children:"Kotlin 1.6 or higher"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Creating application"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"To use the SDK, you must first sign up for a membership in the user console on the web and then create an application. Direct membership is currently limited. If you would like to sign up, please contact Jocoos."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Getting access token from server"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You need an access token to use the SDK. The application server uses the FlipFlop Cloud API to get an access token and passes it to the client"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"2-installing-sdk",children:"2. Installing SDK"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Add the code below to build.gradle in the root of your project."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"allprojects {\n    repositories {\n        maven { url 'https://jitpack.io' }\n    }\n}\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Add the code below to the build.gradle of the module you want to use the SDK for."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"dependencies {\n  implementation(\u2018com.jocoos.jocoos-public:ffc-sdk-client-android:1.1.3\u2019)\n}\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"You need app permissions to use the SDK. You must have these permissions before you can go live. Add the following to your AndroidManifest.xml."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<uses-permission android:name="android.permission.INTERNET"/>\n<uses-permission android:name="android.permission.CAMERA"/>\n<uses-permission android:name="android.permission.RECORD_AUDIO"/>\n\n<uses-feature\n    android:name="android.hardware.camera"\n    android:required="false" />\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"3-usage",children:"3. Usage"}),"\n",(0,s.jsx)(n.p,{children:"FlipFlop relies on the RECORD_AUDIO and CAMERA permissions to use the microphone and camera. These permission must be requested at runtime. Reference the sample app for an example"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Managing video room"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Call following method to get instance for video room"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"// server_url: FlipFlop Cloud server address\n// access_token: access token\nval api = FFCloudSDK.api(serverUrl, accessToken)\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Providing following functions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Creating video room"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"// title: title\n// description: description\n// password: VideoRoom password for joining\n// customType: custom type\n// customData: custom data Key-Value Pair\napi.createVideoRoom(title, description, password, customType, customData)\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Getting video room info"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"// videoRoomId: video room's id\napi.getVideoRoom(videoRoomId)\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Getting video room list"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"// videoRomState: state\n// type: type\n// sortBy: sort\n// page: page number\n// pageSize: page size\napi.listVideoRooms(videoRoomState, type, sortBy, page, pageSize)\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Getting webrtc information for joining in video room"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"// videoRoomId: \n// password: video room password\n// customData: custom data Key-Value Pair\napi.issueWebRtcVideoRoomToken(videoRoomId, password, customData)\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Joining in a video room"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Creating video room instance"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"// webRtcServerUrl, webRtcToken: values from issueWebRtcVideoRoomToken\nval videoRoom = FFCloudSDK.connectWebRtcVideoRoom(applicationContext, webRtcServerUrl, webRtcToken)\n// R.id.renderer: a view for participant's screen\n// R.id.local_camera: a view for my camera screen\nvideoRoom.initVideoRenderer(findViewById<FFCSurfaceViewRenderer>(R.id.renderer))\nvideoRoom.initVideoRenderer(findViewById<FFCTextureViewRenderer>(R.id.local_camera))\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Registering events"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"videoRoom.events.collect { event ->\n  when (event) {\n    is FFCVideoRoomEvent.Disconnected -> {\n        // video room was disconnected\n    }\n    is FFCVideoRoomEvent.TrackSubscribed -> {\n        // the participant has subscribed to a track\n    }\n    is FFCVideoRoomEvent.TrackUnsubscribed -> {\n        // a previously subscribed track has been unsubscribed\n    }\n    else -> {}\n  }\n}\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Displaying my camera"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"val renderer = findViewById<FFCTextureViewRenderer>(R.id.local_camera)\nvideoRoom.attachLocalVideo(viewRenderer = renderer, enableMicrophone = false, enableCamera = true)\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Displaying participant's screen"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"connecting between track and view when 'TrackSubscribed' event happened"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-kotlin",children:"val remoteRenderer = findViewById<FFCSurfaceViewRenderer>(R.id.renderer)\nvideoRoom.attachRemoteVideo(track, remoteRenderer)\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"4-reference",children:"4. Reference"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/jocoos-public/ffc-sdk-client-android-sample",children:"SDK Sample"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var o=i(6540);const s={},r=o.createContext(s);function d(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);